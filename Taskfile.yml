version: '2'

env:
  AWS_DEFAULT_REGION: eu-west-1
  GO111MODULE: on
  TRAVIS_TAG:
    sh: git describe --tags --candidates=1 --dirty 2>/dev/null || echo "dev"

tasks:
  default:
    cmds:
    - task: test

  test:
    desc: Run all tests.
    cmds:
    - task: test-go
    - task: test-terraform

  build:
    cmds:
    - go build -o build/main{{exeExt}} -ldflags="-s -w" -v cmd/main.go
    - zip -mj build/${TRAVIS_TAG}.zip build/main{{exeExt}}
    - cp build/${TRAVIS_TAG}.zip build/concourse-sts-lambda.zip
    env: { CGO_ENABLED: '0', GOOS: '{{OS}}', GOARCH: '{{ARCH}}' }
  
  generate:
    desc: Generate test fakes.
    cmds:
    - go generate ./...
    sources:
    - '*.go'
    generates:
    - mocks/*.go
    method: checksum

  test-go:
    desc: Run golang test suite.
    deps: [generate]
    cmds:
    - gofmt -s -l -w .
    - go vet -v ./...
    - go test -race -v ./...

  test-terraform:
    desc: Run tests for all terraform directories.
    silent: true
    env:
      DIRECTORIES:
        sh: find . -type f -name '*.tf' -not -path "**/.terraform/*" -exec dirname {} \; | sort -u
    cmds:
    - |
      BOLD=$(tput bold)
      NORM=$(tput sgr0)

      CWD=$PWD

      for d in $DIRECTORIES; do 
        cd $d
        echo "${BOLD} $PWD:${NORM}"

        if ! terraform fmt -check=true -write=true -list=false -recursive=false; then
          echo "  ✗ terraform fmt" && exit $?
        else
          echo "  √ terraform fmt"
        fi

        if ! terraform init -backend=false -input=false -get=true -get-plugins=true -no-color > /dev/null; then
          echo "  ✗ terraform init" && exit $?
        else
          echo "  √ terraform init"
        fi

        if ! terraform validate > /dev/null; then
          echo "  ✗ terraform validate" && exit $?
        else
          echo "  √ terraform validate"
        fi

        cd $CWD
      done
